{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","buttonPushRevers","className","type","classNames","onClick","prevReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAoBMC,EAhDD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAOjB,EAASM,SAGlBF,GACFM,EAAaQ,UAIfC,QAAQC,IAAIb,EAAUH,GAEfM,EAyBOW,CAAkBpB,EAAiB,CAAEM,WAAUH,eACvDkB,EAAmBlB,GAAcG,IAAaP,EAASM,KAE7D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaP,EAASc,WAEpCY,QA7BgB,WACtBlB,EAAYR,EAASc,WAuBjB,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaP,EAASgB,SAEpCU,QAnCc,WACpBlB,EAAYR,EAASgB,SA6BjB,4BAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAarB,IAEfsB,QApCU,WAChBrB,GAAc,SAACsB,GAAD,OAAkBA,MA8B5B,qBASCL,GACC,wBACEE,KAAK,SACLD,UAAU,0BACVG,QAjDU,WAClBlB,EAAYR,EAASM,MACrBD,GAAc,IA4CR,sBAWJ,6BACE,6BACGI,EAAMmB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC3HrDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50fd9485.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return SortType.NONE;\n    }\n  });\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const getSortAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const getSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const getSortNone = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const getRevers = () => {\n    setIsReversed((prevReverse) => !prevReverse);\n  };\n\n  // const { isReversed, sortType } = this.state;\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const buttonPushRevers = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={getSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={getSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !isReversed,\n          })}\n          onClick={getRevers}\n        >\n          Reverse\n        </button>\n        {buttonPushRevers && (\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={getSortNone}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}